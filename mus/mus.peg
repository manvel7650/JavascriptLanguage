start = seqOrPar

seqOrPar = t:(seqChar/parChar) groupStartChar a:seqOrPar+ groupEndChar 
{
	var result = {tag: t.toLowerCase(), left: a[0]};
	var temp = result;
	for(var i=1; i<a.length; i++) {
		if(i == a.length - 1) {
			temp['right'] = a[i];
		} else {
			temp['rigth'] = {tag: 'seq', left: a[i]};
			temp = temp['right'];
		}
	}
	return result;
}
	/ item

item = a:(note/rest) {return a;}

note = pitch:noteName dur:duration {return {tag: 'note', pitch: pitch, dur: dur};}

rest = restChar dur:duration {return {tag: 'rest', dur: dur};}

ignore = ignoreChar

noteName = pitch:[A-G] octave:[0-9] {return "" + pitch + octave}

duration = durationStartChar a:[0-9]+ durationEndChar {return parseInt(a.join(""), 10)}

repeatCount = a:[0-9]+ {return parseInt(a.join(""), 10)}

seqChar = "SEQ";
parChar = "PAR";
restChar = "REST"
groupStartChar = "{"
groupEndChar = "}"
groupSeparatorChar = ","
durationStartChar = "["
durationEndChar = "]"
ignoreChar = " " / "\t" / "\r\n" / "\n"
